{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar transformData = require('./../helpers/transformData');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar btoa = window.btoa || require('./../helpers/btoa');\nmodule.exports = function xhrAdapter(resolve, reject, config) {\n  var requestData = config.data;\n  var requestHeaders = config.headers;\n  if (utils.isFormData(requestData)) {\n    delete requestHeaders['Content-Type']; // Let the browser set it\n  }\n\n  var request = new XMLHttpRequest();\n\n  // For IE 8/9 CORS support\n  // Only supports POST and GET calls and doesn't returns the response headers.\n  if (window.XDomainRequest && !('withCredentials' in request) && !isURLSameOrigin(config.url)) {\n    request = new window.XDomainRequest();\n  }\n\n  // HTTP basic authentication\n  if (config.auth) {\n    var username = config.auth.username || '';\n    var password = config.auth.password || '';\n    requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n  }\n  request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n  // Set the request timeout in MS\n  request.timeout = config.timeout;\n\n  // Listen for ready state\n  request.onload = function handleLoad() {\n    if (!request) {\n      return;\n    }\n    // Prepare the response\n    var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n    var responseData = ['text', ''].indexOf(config.responseType || '') !== -1 ? request.responseText : request.response;\n    var response = {\n      data: transformData(responseData, responseHeaders, config.transformResponse),\n      // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)\n      status: request.status === 1223 ? 204 : request.status,\n      statusText: request.status === 1223 ? 'No Content' : request.statusText,\n      headers: responseHeaders,\n      config: config\n    };\n\n    // Resolve or reject the Promise based on the status\n    (response.status >= 200 && response.status < 300 || !('status' in request) && response.responseText ? resolve : reject)(response);\n\n    // Clean up request\n    request = null;\n  };\n\n  // Handle low level network errors\n  request.onerror = function handleError() {\n    // Real errors are hidden from us by the browser\n    // onerror should only fire if it's a network error\n    reject(new Error('Network Error'));\n\n    // Clean up request\n    request = null;\n  };\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n  if (utils.isStandardBrowserEnv()) {\n    var cookies = require('./../helpers/cookies');\n\n    // Add xsrf header\n    var xsrfValue = config.withCredentials || isURLSameOrigin(config.url) ? cookies.read(config.xsrfCookieName) : undefined;\n    if (xsrfValue) {\n      requestHeaders[config.xsrfHeaderName] = xsrfValue;\n    }\n  }\n\n  // Add headers to the request\n  if ('setRequestHeader' in request) {\n    utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n      if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n        // Remove Content-Type if data is undefined\n        delete requestHeaders[key];\n      } else {\n        // Otherwise add header to the request\n        request.setRequestHeader(key, val);\n      }\n    });\n  }\n\n  // Add withCredentials to request if needed\n  if (config.withCredentials) {\n    request.withCredentials = true;\n  }\n\n  // Add responseType to request if needed\n  if (config.responseType) {\n    try {\n      request.responseType = config.responseType;\n    } catch (e) {\n      if (request.responseType !== 'json') {\n        throw e;\n      }\n    }\n  }\n  if (utils.isArrayBuffer(requestData)) {\n    requestData = new DataView(requestData);\n  }\n\n  // Send the request\n  request.send(requestData);\n};","map":{"version":3,"names":["utils","require","buildURL","parseHeaders","transformData","isURLSameOrigin","btoa","window","module","exports","xhrAdapter","resolve","reject","config","requestData","data","requestHeaders","headers","isFormData","request","XMLHttpRequest","XDomainRequest","url","auth","username","password","Authorization","open","method","toUpperCase","params","paramsSerializer","timeout","onload","handleLoad","responseHeaders","getAllResponseHeaders","responseData","indexOf","responseType","responseText","response","transformResponse","status","statusText","onerror","handleError","Error","isStandardBrowserEnv","cookies","xsrfValue","withCredentials","read","xsrfCookieName","undefined","xsrfHeaderName","forEach","setRequestHeader","val","key","toLowerCase","e","isArrayBuffer","DataView","send"],"sources":["/Users/net/node_modules/axios/lib/adapters/xhr.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar transformData = require('./../helpers/transformData');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar btoa = window.btoa || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(resolve, reject, config) {\n  var requestData = config.data;\n  var requestHeaders = config.headers;\n\n  if (utils.isFormData(requestData)) {\n    delete requestHeaders['Content-Type']; // Let the browser set it\n  }\n\n  var request = new XMLHttpRequest();\n\n  // For IE 8/9 CORS support\n  // Only supports POST and GET calls and doesn't returns the response headers.\n  if (window.XDomainRequest && !('withCredentials' in request) && !isURLSameOrigin(config.url)) {\n    request = new window.XDomainRequest();\n  }\n\n  // HTTP basic authentication\n  if (config.auth) {\n    var username = config.auth.username || '';\n    var password = config.auth.password || '';\n    requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n  }\n\n  request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n  // Set the request timeout in MS\n  request.timeout = config.timeout;\n\n  // Listen for ready state\n  request.onload = function handleLoad() {\n    if (!request) {\n      return;\n    }\n    // Prepare the response\n    var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n    var responseData = ['text', ''].indexOf(config.responseType || '') !== -1 ? request.responseText : request.response;\n    var response = {\n      data: transformData(\n        responseData,\n        responseHeaders,\n        config.transformResponse\n      ),\n      // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)\n      status: request.status === 1223 ? 204 : request.status,\n      statusText: request.status === 1223 ? 'No Content' : request.statusText,\n      headers: responseHeaders,\n      config: config\n    };\n\n    // Resolve or reject the Promise based on the status\n    ((response.status >= 200 && response.status < 300) ||\n     (!('status' in request) && response.responseText) ?\n      resolve :\n      reject)(response);\n\n    // Clean up request\n    request = null;\n  };\n\n  // Handle low level network errors\n  request.onerror = function handleError() {\n    // Real errors are hidden from us by the browser\n    // onerror should only fire if it's a network error\n    reject(new Error('Network Error'));\n\n    // Clean up request\n    request = null;\n  };\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n  if (utils.isStandardBrowserEnv()) {\n    var cookies = require('./../helpers/cookies');\n\n    // Add xsrf header\n    var xsrfValue = config.withCredentials || isURLSameOrigin(config.url) ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n    if (xsrfValue) {\n      requestHeaders[config.xsrfHeaderName] = xsrfValue;\n    }\n  }\n\n  // Add headers to the request\n  if ('setRequestHeader' in request) {\n    utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n      if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n        // Remove Content-Type if data is undefined\n        delete requestHeaders[key];\n      } else {\n        // Otherwise add header to the request\n        request.setRequestHeader(key, val);\n      }\n    });\n  }\n\n  // Add withCredentials to request if needed\n  if (config.withCredentials) {\n    request.withCredentials = true;\n  }\n\n  // Add responseType to request if needed\n  if (config.responseType) {\n    try {\n      request.responseType = config.responseType;\n    } catch (e) {\n      if (request.responseType !== 'json') {\n        throw e;\n      }\n    }\n  }\n\n  if (utils.isArrayBuffer(requestData)) {\n    requestData = new DataView(requestData);\n  }\n\n  // Send the request\n  request.send(requestData);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}