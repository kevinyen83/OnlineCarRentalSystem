[{"/Users/net/car-rental-system/clint/src/index.js":"1","/Users/net/car-rental-system/clint/src/App.js":"2","/Users/net/car-rental-system/clint/src/reportWebVitals.js":"3","/Users/net/car-rental-system/clint/src/components/CategoryBar.js":"4","/Users/net/car-rental-system/clint/src/components/filterItems.js":"5","/Users/net/car-rental-system/clint/src/components/categoryList.js":"6","/Users/net/car-rental-system/clint/src/components/CartPopup.js":"7"},{"size":570,"mtime":1683459028270,"results":"8","hashOfConfig":"9"},{"size":19348,"mtime":1686654707477,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1682533242390,"results":"11","hashOfConfig":"9"},{"size":3318,"mtime":1686486431881,"results":"12","hashOfConfig":"9"},{"size":251,"mtime":1686488853555,"results":"13","hashOfConfig":"9"},{"size":368,"mtime":1686485855995,"results":"14","hashOfConfig":"9"},{"size":2501,"mtime":1686649355777,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1wq5n7s",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/net/car-rental-system/clint/src/index.js",[],[],[],"/Users/net/car-rental-system/clint/src/App.js",["39","40","41","42","43","44","45","46"],[],"import logo from \"/Users/net/car-rental-system/clint/src/components/assets/images/logo.png\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport CategoryBar from \"/Users/net/car-rental-system/clint/src/components/CategoryBar.js\";\nimport categoryList from \"./components/categoryList\";\nimport CartPopup from \"/Users/net/car-rental-system/clint/src/components/CartPopup.js\";\n\nfunction App() {\n    const [cartItems, setCartItems] = useState([]);\n    const [totalPrice, setTotalPrice] = useState(0); \n    const [isCartEmpty, setIsCartEmpty] = useState(true);\n    const [showForm, setShowForm] = useState(false);\n    const [cartPopup, setCartPopup] = useState(false);\n    const [reservationDays, setReservationDays] = useState(1);\n    const [lastId, setLastId] = useState(0);\n    const [isEmailValidated, setIsEmailValidated] = useState(false);\n    const [bondValue, setBondValue] = useState(\"?\");\n    const [hasRentingHistory, setHasRentingHistory] = useState(false);\n\n        const [firstName, setFirstName] = useState(\"\");\n        const [lastName, setLastName] = useState(\"\");\n        const [email, setEmail] = useState(\"\");\n        const [address, setAddress] = useState(\"\");\n        const [city, setCity] = useState(\"\");\n        const [state, setState] = useState(\"\");\n        const [postCode, setPostCode] = useState(\"\");\n        const [paymentType, setPaymentType] = useState(\"\");\n\n    const handleValueChange = (e) => {\n        setReservationDays(e.target.value); \n    };\n\n    const addToCart = (car) => {\n     fetch(\"http://localhost:3001/cars.json\")\n    .then(res => res.json())\n    .then(data => {\n      const availableCars = data.cars.filter(c => c.id === car.id && c.availability === \"Yes\");\n      if (availableCars.length > 0) {\n        const newCartItem = {\n          ...car,\n          id: lastId + 1,\n        };\n        setCartItems([...cartItems, { ...newCartItem, reservationDays: 1 }]);\n        setTotalPrice(totalPrice + car.price_per_day);\n        setIsCartEmpty(false);\n        setLastId(lastId + 1);\n        sessionStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n        sessionStorage.setItem(\"totalPrice\", totalPrice);\n        sessionStorage.setItem(\"isCartEmpty\", isCartEmpty);\n        sessionStorage.setItem(\"lastId\", lastId);\n        alert(\"Added to cart!\");\n      } else {\n        alert(\"Sorry, the car is not available now. Please try other cars.\");\n      }\n    });\n    };\n\n    class CarBrowsing extends React.Component {\n        constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"http://localhost:3001/cars.json\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n            this.setState({\n                isLoaded: true,\n                cars: result.cars\n            });\n            },\n            (error) => {\n            this.setState({\n                isLoaded: true,\n                error\n            });\n            }\n        )\n    }\n    \n        render() {\n            const { error, isLoaded, cars } = this.state;\n                if (error) {\n                return <div>Error: {error.message}</div>;\n                } else if (!isLoaded) {\n                return <div>Loading...</div>;\n                } else {\n                return (\n                        <div className=\"main-area\">\n                            <div className=\"mainArea-card-container\">\n                                {cars.map(car => (\n                                    <div className=\"mainArea-card-item\" key={car.id}>\n                                        <img className= \"mainArea-img\" src={car.image}></img>\n                                        <h3 className=\"mainArea-name\">{car.name}</h3>\n                                        <p className=\"mainArea-title\"><b>Category: </b>{car.category}</p> \n                                        <p className=\"mainArea-title\"><b>Model: </b>{car.model}</p>\n                                        <p className=\"mainArea-title\"><b>Mileage: </b>{car.mileage} kms</p>\n                                        <p className=\"mainArea-title\"><b>Fuel Type: </b>{car.fuel_type}</p> \n                                        <p className=\"mainArea-title\"><b>Seats: </b>{car.seats}</p>\n                                        <p className=\"mainArea-title\"><b>Price Per Day: </b>{car.price_per_day} AU</p>\n                                        <p className=\"mainArea-title\"><b>Availability: </b>{car.availability}</p>\n                                        <p className=\"mainArea-description\"><b>Description: </b>{car.description}</p>\n                                        <br/>\n                                        <div>\n                                            <button className=\"addToCartBtn\" onClick={() => addToCart(car)}>Add to Cart</button>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                )\n            }\n    }\n}\n\n\nconst tableRows = cartItems.map((item) => {\n    const handleChange = (e) => {\n        const updatedCart = cartItems.map((cartItem) => {\n        if (cartItem.id === item.id) {\n            return { ...cartItem, reservationDays: e.target.value };\n        }\n        return cartItem;\n        });\n        setCartItems(updatedCart);\n    };\n        \n    return (\n        <tr key={item.id}>\n        <td className=\"cart_table_item\">\n            <img src={item.image} alt={item.name} height=\"50\" width=\"80\" />\n        </td>\n        <td className=\"cart_table_item\">{item.name}</td>\n        <td className=\"cart_table_item\">$ {item.price_per_day}</td>\n        <td className=\"cart_table_item\">\n            <input type=\"number\" min=\"1\" value={item.reservationDays || 1} onChange={handleChange} />\n        </td>\n        <td className=\"cart_table_item\">\n            <button onClick={() => removeItem(item)}>Remove</button>\n        </td>\n        </tr>\n    );\n    });\n\n    const toggleCartPopup = () => {\n        if (isCartEmpty === false){\n            setCartPopup(!cartPopup);\n        }else{\n            alert(\"No car has been reserved!\")\n        }\n    }\n\n    const removeItem = (item) => {\n        const itemIndex = cartItems.findIndex((i) => i === item);\n        if (itemIndex >= 0) {\n        const updatedItems = [...cartItems];\n        updatedItems.splice(itemIndex, 1);\n    \n        setCartItems(updatedItems);\n        setTotalPrice(totalPrice - item.price_per_day);\n        setIsCartEmpty(updatedItems.length === 0);\n        }\n        };\n\n    const checkout = (item) => {\n        if (!isCartEmpty) {\n        setShowForm(!showForm);\n        setCartPopup(false);\n        setTotalPrice(\n            cartItems.reduce((total, item) => total + item.price_per_day * item.reservationDays, 0)\n        );\n        setCartPopup(false);\n        } else {\n            alert(\"Invaild Input Value!\")\n        }\n    };\n  \n    const updateCarAvailability = () => {\n        fetch(\"http://localhost:3001/cars.json\")\n            .then((res) => res.json())\n            .then((data) => {\n            const updatedCars = data.cars.map((car) => {\n                const foundCartItem = cartItems.find(\n                (item) => item.name === car.name\n                );\n                if (foundCartItem) {\n                return {\n                    ...car,\n                    availability: \"No\"\n                };\n                }\n                return car;\n            });\n        \n            fetch(\"http://localhost:3001/cars.json\", {\n                method: \"PUT\",\n                headers: {\n                \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({ cars: updatedCars })\n            })\n                .then((res) => {\n                if (!res.ok) {\n                    throw new Error(\"Failed to update car availability.\");\n                }\n                console.log(\"Car availability updated successfully.\");\n                })\n                .catch((error) => {\n                console.error(error);\n                });\n            })\n            .catch((error) => {\n            console.error(error);\n            });\n        };\n\n    const bookingCar = (event, car) => {\n        event.preventDefault();\n            if (firstName && lastName && email && address && city && state && postCode && paymentType !== \" \") {\n                if (email.includes(\"@\")) {\n                    if (isEmailValidated != true){\n                        alert(\"Please validate your Email first\")\n                    } else {\n                    Axios.post(\"http://localhost:3001/create\", {\n                        email: email,\n                        totalPrice: totalPrice,\n                            }).then(() => {\n                            console.log(\"success\");\n                            });\n                    updateCarAvailability(cartItems)\n                    \n                    setShowForm(false);\n                    setCartItems([]);\n                    setIsCartEmpty(true);\n                    setShowForm(false);\n        \n                    setFirstName(\"\");\n                    setLastName(\"\");\n                    setEmail(\"\");\n                    setAddress(\"\");\n                    setCity(\"\");\n                    setState(\"\");\n                    setPostCode(\"\");\n                    setPaymentType(\"\");\n                    \n                    alert(\"Order placed successfully!\");\n                    console.log(\"Form submitted\", email, totalPrice);                    \n                    }\n            } else {\n                alert(\"It's not a valid email address\");\n                }\n        } else {\n            alert(\"Please fill in all fields.\");\n        }\n      };\n\n      const validateEmail = () => {\n        Axios.post(\"http://localhost:3001/validateEmail\", { email })\n          .then(response => {\n            const { hasRentingHistory } = response.data;\n            setHasRentingHistory(hasRentingHistory);\n            console.log(\"A\" + hasRentingHistory)\n            setIsEmailValidated(true);\n            if (email !== \" \" && email.includes(\"@\")) {\n                console.log(\"B\" + hasRentingHistory)\n                if (hasRentingHistory == true){\n                    setBondValue(0)\n                } else if (hasRentingHistory == false) {\n                    setBondValue(200)\n                }\n        } else {\n            alert(\"Please fill in the email field with a valid email address\");\n        }\n        })\n        .catch(error => {\n            console.error(error);\n        });\n    };\n\n    return (\n    <>\n    {/* NavBar */}\n    <body>\n        <nav className=\"navBar-container\">\n            <div className=\"navBar-container-brand\">\n                <div className=\"navBar-container-item\">\n                    <img className=\"navBar-container-logo\" src={logo} alt=\"Logo\"/>\n                </div>\n                <div className=\"navBar-container-item\">\n                    <CategoryBar categoryList={categoryList} />\n                </div>\n                <div></div>\n                <div></div>\n                <div className=\"navBar-container-item\">\n                    <div className=\"navBar-container-reservationBtn\" onClick={toggleCartPopup}>Car Reservation ({cartItems.length})</div>\n                </div>\n            </div>\n        </nav>\n        <div className=\"container\">\n                {/* main-area */}\n                <CarBrowsing/>\n                \n                {/* cart-popup */}\n                <CartPopup cartPopup={cartPopup} />\n\n                {/* orderForm-popup */}\n                {showForm && (\n                    <div className=\"pop-form\">\n                        <div className=\"overlay\"></div>\n                            <div className=\"form-container\">\n                                <div className=\"form-content\">\n                                    <div className=\"cart-header\">\n                                        <h2 className=\"form-header-title\">Check Out</h2>\n                                        <button className=\"close-popup\" onClick={checkout}>Close</button>\n                                    </div>\n                                    <form className=\"order-form\" onSubmit={bookingCar}>\n                                    <div className=\"form-table-container\">\n                                        <div className=\"order-form-item\">\n                                            <label htmlFor=\"firstName\">First Name: </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"firstName\"\n                                                    id=\"firstName\"\n                                                    value={firstName}\n                                                    onChange={(event) => setFirstName(event.target.value)}\n                                                />\n                                        </div>\n\n                                        <div className=\"order-form-item\">\n                                            <label htmlFor=\"name\">Last Name: </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"lastName\"\n                                                    id=\"lastName\"\n                                                    value={lastName}\n                                                    onChange={(event) => setLastName(event.target.value)}\n                                                />\n                                        </div>\n\n                                        <div className=\"order-form-item\">\n                                            <label>Email: </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"email\"\n                                                    id=\"email\"\n                                                    value={email}\n                                                    onChange={(event) => setEmail(event.target.value)}          \n                                                />\n                                            <button type=\"button\" onClick={validateEmail}>Validate Email</button>\n                                        </div>\n\n                                        <div className=\"order-form-item\">\n                                            <label>Address Line: </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"address\"\n                                                    id=\"address\"\n                                                    value={address}\n                                                    onChange={(event) => setAddress(event.target.value)}\n                                                />\n                                        </div>\n\n                                        <div className=\"order-form-item\">\n                                            <label>City: </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"city\"\n                                                    id=\"city\"\n                                                    value={city}\n                                                    onChange={(event) => setCity(event.target.value)}\n                                                />\n                                        </div>\n\n                                        <div className=\"order-form-item\">\n                                            <label>State: </label>\n                                            <select name=\"state\" id=\"state\" onChange={(event) => setState(event.target.value)}>\n                                                <option value=\"\">-- Please select --</option>\n                                                <option value=\"ACT\">Australian Capital Territory</option>\n                                                <option value=\"NSW\">New South Wales</option>\n                                                <option value=\"NT\">Northern Territory</option>\n                                                <option value=\"QLD\">Queensland</option>\n                                                <option value=\"SA\">South Australia</option>\n                                                <option value=\"TAS\">Tasmania</option>\n                                                <option value=\"VIC\">Victoria</option>\n                                                <option value=\"WA\">Western Australia</option>\n                                            </select>\n                                        </div>\n\n                                        <div className=\"order-form-item\">\n                                            <label>Post Code: </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"postCode\"\n                                                    id=\"postCode\"\n                                                    value={postCode}\n                                                    onChange={(event) => setPostCode(event.target.value)}\n                                                />\n                                        </div>\n\n                                        <div className=\"order-form-item\">\n                                            <label>Payment Type: </label>\n                                            <select name=\"paymentType\" id=\"paymentType\" onChange={(event) => setPaymentType(event.target.value)}>\n                                                <optgroup label=\"paymentType\">\n                                                    <option value=\"master\">Master</option>\n                                                    <option value=\"visa\">Visa</option>\n                                                </optgroup>\n                                            </select>   \n                                        </div>\n                                    </div>\n                                    </form>\n                                <div className=\"order-form-footer\">\n                                    <div className=\"order-form-price\"><h3>Total Price: ${totalPrice.toFixed(2)}</h3></div>\n                                    <div className=\"order-form-price\"><h3>Bond: ${bondValue}</h3></div>                        \n                                    <button type=\"button\" onClick={checkout}>Continue Selection</button>\n                                    <button type=\"submit\" onClick={bookingCar}>Booking</button>     \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n    </body>\n</>\n)\n}\n\nexport default App;","/Users/net/car-rental-system/clint/src/reportWebVitals.js",[],[],"/Users/net/car-rental-system/clint/src/components/CategoryBar.js",["47","48"],[],"/Users/net/car-rental-system/clint/src/components/filterItems.js",[],[],"/Users/net/car-rental-system/clint/src/components/categoryList.js",[],[],"/Users/net/car-rental-system/clint/src/components/CartPopup.js",[],[],{"ruleId":"49","severity":1,"message":"50","line":15,"column":12,"nodeType":"51","messageId":"52","endLine":15,"endColumn":27},{"ruleId":"49","severity":1,"message":"53","line":19,"column":12,"nodeType":"51","messageId":"52","endLine":19,"endColumn":29},{"ruleId":"49","severity":1,"message":"54","line":30,"column":11,"nodeType":"51","messageId":"52","endLine":30,"endColumn":28},{"ruleId":"55","severity":1,"message":"56","line":100,"column":41,"nodeType":"57","endLine":100,"endColumn":88},{"ruleId":"49","severity":1,"message":"58","line":124,"column":7,"nodeType":"51","messageId":"52","endLine":124,"endColumn":16},{"ruleId":"59","severity":1,"message":"60","line":228,"column":42,"nodeType":"61","messageId":"62","endLine":228,"endColumn":44},{"ruleId":"59","severity":1,"message":"63","line":273,"column":39,"nodeType":"61","messageId":"62","endLine":273,"endColumn":41},{"ruleId":"59","severity":1,"message":"63","line":275,"column":46,"nodeType":"61","messageId":"62","endLine":275,"endColumn":48},{"ruleId":"64","severity":1,"message":"65","line":25,"column":1,"nodeType":"66","messageId":"67","endLine":27,"endColumn":24},{"ruleId":"64","severity":1,"message":"65","line":28,"column":13,"nodeType":"66","messageId":"67","endLine":64,"endColumn":19},"no-unused-vars","'reservationDays' is assigned a value but never used.","Identifier","unusedVar","'hasRentingHistory' is assigned a value but never used.","'handleValueChange' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'tableRows' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock"]